name: Flutter Web Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.0'
        channel: 'stable'
    
    - name: Install dependencies
      run: |
        flutter pub get
        flutter config --enable-web
        sudo apt-get update && sudo apt-get install -y gzip brotli
    
    # 构建优化版本
    - name: Build Web App
      run: |
        # 确保资源目录存在
        mkdir -p build/web/assets
        
        # 构建web应用
        flutter build web \
          --release \
          --web-renderer html \
          --dart2js-optimization=O4 \
          --tree-shake-icons \
          --no-source-maps \
          --pwa-strategy offline-first \
          --verbose
        
        # 复制必要的资源文件
        cp -r lib/ShipmentManagement build/web/assets/ || true
        
        # 确保字体文件存在
        if [ ! -f "build/web/assets/FontManifest.json" ]; then
          echo '{"fonts":[]}' > build/web/assets/FontManifest.json
        fi
        
        # 修复base href
        sed -i 's|<base href="/">|<base href="./"|g' build/web/index.html
        
        # 优化Service Worker
        if [ -f "build/web/flutter_service_worker.js" ]; then
          echo "Optimizing Service Worker..."
          # 修改Service Worker只缓存核心资源
          sed -i 's/"core": \[\]/"core": ["main.dart.js", "flutter.js", "index.html", "manifest.json", "favicon.png", "assets\/FontManifest.json"]/g' build/web/flutter_service_worker.js
        fi
    
    - name: Optimize Assets
      run: |
        cd build/web
        
        # 压缩JS文件
        find . -name "*.js" -exec gzip -9 -k {} \;
        find . -name "*.js" -exec brotli -9 -k {} \;
        
        # 压缩JSON文件
        find . -name "*.json" -exec gzip -9 -k {} \;
        find . -name "*.json" -exec brotli -9 -k {} \;
        
        # 压缩HTML文件
        find . -name "*.html" -exec gzip -9 -k {} \;
        find . -name "*.html" -exec brotli -9 -k {} \;
        
        # 列出所有资源文件以便调试
        echo "Listing all files in build/web:"
        find . -type f | sort
        
        # 检查文件大小
        echo "File sizes:"
        du -h main.dart.js
        du -h flutter.js
        du -h flutter_service_worker.js
    
    # 创建离线包
    - name: Create Offline Package
      run: |
        cd build/web
        zip -r ../../flutter_web_app.zip *
    
    - name: Upload Offline Package
      uses: actions/upload-artifact@v4
      with:
        name: flutter_web_app
        path: flutter_web_app.zip
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build/web
        force_orphan: true
        commit_message: "Deploy Flutter web app to GitHub Pages"
        enable_jekyll: false
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com' 